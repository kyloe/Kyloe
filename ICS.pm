#!/usr/bin/perl
package Kyloe::ICS;
use Data::Dumper;

sub new
{
	my $class    = shift;    # Determine the class for the oject to create ok
    
	my $obj = {};                       # Instantiate a generic empty object

	bless $obj, $class; # 'bless' this new generic object into the desired class

    $obj->{BEGIN} = 'VCALENDAR';
    $obj->{VERSION} = '2.0';
    $obj->{METHOD} = 'PUBLISH';
    $obj->{COMMENT} = 'Generated by saneRoster';
    $obj->{EVENTS} = [];
    $obj->{END} = 'VCALENDAR';
    
	return $obj;    # Return our newly blessed and loaded object
}

sub add_vevent()
    {
    my $self = shift;
    my $newSize = $#{$self->{EVENTS}}+1;
    $self->{EVENTS}->[$newSize]->{BEGIN} = 'VEVENT';
    $self->{EVENTS}->[$newSize]->{END} = 'VEVENT';    
    return $#{$self->{EVENTS}} 
    }
    
sub add_vevent_property()
    {
	my $self = shift;
	my $id = shift;
	my $name = shift;
	my $value = shift;
	$self->{EVENTS}->[$id]->{$name} = $value;
    }
    
sub get_property_as_string()
    {
    my $self = shift;
    my $property = shift;
    return $property.':'.$self->{$property}."\n";	
    }    

    
sub get_event_property_as_string()
    {
    my $self = shift;
    my $event = shift;
    my $property = shift;
    return $property.':'.$self->{EVENTS}->[$event]->{$property}."\n";	
    }    

    
sub as_string()
    {
    my $self = shift;
    $s = '';
    $s .= $self->get_property_as_string('BEGIN');
    $s .= $self->get_property_as_string('VERSION');
    $s .= $self->get_property_as_string('METHOD');
    $s .= $self->get_property_as_string('COMMENT');

	my @x = $self->{EVENTS};

    for my $e (0 ... $#{$self->{EVENTS}})
		{
		$s .= $self->get_event_property_as_string($e,'BEGIN');
		$s .= $self->get_event_property_as_string($e,'DTSTART');
		$s .= $self->get_event_property_as_string($e,'DTEND');
		$s .= $self->get_event_property_as_string($e,'SUMMARY');
		$s .= $self->get_event_property_as_string($e,'DESCRIPTION');
		$s .= $self->get_event_property_as_string($e,'UID');
		$s .= $self->get_event_property_as_string($e,'DTSTAMP');	
		$s .= $self->get_event_property_as_string($e,'END');
		}   	
			 
    $s .= $self->get_property_as_string('END');
    
    return $s;
    }
    
    
1;